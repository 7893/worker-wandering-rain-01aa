name: Build & Deploy Worker

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      # --- 设置 pnpm ---
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10 # <-- *** 修改这里，使用与本地一致的主版本 ***

      # --- 设置 Node.js ---
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22 # <-- 与您本地版本保持一致
          cache: 'pnpm'

      # --- 安装依赖 ---
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      # --- 使用 wrangler 仅构建，不部署（避免 script-settings 调用） ---
      - name: Build worker bundle (no deploy)
        run: npx wrangler deploy --dry-run --outdir .cfbundle --minify
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      # --- 组装 metadata 并通过 API 直接上传脚本，绕开 script-settings ---
      - name: Upload bundle via Cloudflare API (modules)
        env:
          CF_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CF_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          set -euo pipefail
          cd .cfbundle
          # metadata 需要 main_module + compatibility_date；如需环境变量，使用 bindings.plain_text
          cat > metadata.json << 'JSON'
          {
            "main_module": "index.js",
            "compatibility_date": "2025-09-20",
            "bindings": [
              { "name": "ORDS_BASE_URL",   "type": "plain_text", "text": "https://w9cigs8ax3ponzm-ioftnbqu5k6zb6ea.adb.ap-tokyo-1.oraclecloudapps.com/ords" },
              { "name": "ORDS_SCHEMA_PATH", "type": "plain_text", "text": "admin" },
              { "name": "ORDS_API_PATH",    "type": "plain_text", "text": "colorevents" },
              { "name": "DB_USER",          "type": "plain_text", "text": "ADMIN" }
            ]
          }
JSON
          echo '--- metadata.json ---'
          cat metadata.json
          echo '---------------------'
          http_code=$(curl -sS -X PUT \
            -H "Authorization: Bearer ${CF_API_TOKEN}" \
            -H "X-Workers-Module: true" \
            -F "metadata=@metadata.json;type=application/json" \
            -F "index.js=@index.js;type=application/javascript+module" \
            -o /tmp/cf_upload_body.json -w "%{http_code}" \
            "https://api.cloudflare.com/client/v4/accounts/${CF_ACCOUNT_ID}/workers/scripts/worker-wandering-rain-01aa")
          echo "HTTP ${http_code}"
          cat /tmp/cf_upload_body.json || true
          if [[ ! ${http_code} =~ ^2|^3 ]]; then
            echo "Upload failed" >&2
            exit 1
          fi

      # --- Explicitly disable Observability/Logpush via script-settings if present (best-effort) ---
      - name: Ensure Observability disabled (best-effort)
        if: always()
        env:
          CF_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CF_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          set -euo pipefail
          curl -sS -X PATCH \
            -H "Authorization: Bearer ${CF_API_TOKEN}" \
            -H "Content-Type: application/json" \
            --data '{"observability": {"enabled": false}}' \
            "https://api.cloudflare.com/client/v4/accounts/${CF_ACCOUNT_ID}/workers/scripts/worker-wandering-rain-01aa/script-settings" || true

      # --- Ensure cron schedules are configured (Free plan supports up to 5) ---
      - name: Ensure Worker cron schedule
        env:
          CF_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CF_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          set -euo pipefail
          curl -fLsS -X PUT \
            -H "Authorization: Bearer ${CF_API_TOKEN}" \
            -H "Content-Type: application/json" \
            --data '{"schedules":[{"cron":"0 0 * * *"}]}' \
            "https://api.cloudflare.com/client/v4/accounts/${CF_ACCOUNT_ID}/workers/scripts/worker-wandering-rain-01aa/schedules"
