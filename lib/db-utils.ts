// lib/db-utils.ts

const BASE_URL = "https://你的-oracle-rest-api基础地址"; // ⚡ 修改成你的 REST API 前缀
const ADMIN_SCHEMA = "admin"; // 你的 Oracle 用户名，比如 admin

async function tableExists(tableName: string): Promise<boolean> {
  const checkUrl = `${BASE_URL}/metadata-catalog/${ADMIN_SCHEMA}/tables/${tableName}`;
  const resp = await fetch(checkUrl, { method: 'GET' });
  return resp.ok;
}

async function createTable(tableName: string): Promise<void> {
  const url = `${BASE_URL}/sql`;
  const sql = `
    CREATE TABLE ${ADMIN_SCHEMA}.${tableName} (
      id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      color VARCHAR2(50),
      event_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      trace_id VARCHAR2(100),
      source CHAR(1),
      extra CLOB
    )
  `;
  await fetch(url, {
    method: 'POST',
    headers: { "Content-Type": "application/sql" },
    body: sql
  });
}

async function registerRestApi(tableName: string): Promise<void> {
  const url = `${BASE_URL}/metadata-catalog/${ADMIN_SCHEMA}/modules/default`;
  const payload = {
    module_name: "default",
    base_path: "/",
    privileges: "unauthenticated",
    objects: [
      {
        object_name: tableName,
        object_alias: tableName,
        http_methods_allowed: "GET,POST"
      }
    ]
  };
  await fetch(url, {
    method: 'PUT',
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(payload)
  });
}

export async function ensureMonthlyTableAndRestApi(tableName: string): Promise<void> {
  if (await tableExists(tableName)) return;
  await createTable(tableName);
  await registerRestApi(tableName);
}

export async function insertColorRecord(tableName: string, color: string, traceId: string, source: string): Promise<void> {
  const url = `${BASE_URL}/${tableName}/`;
  await fetch(url, {
    method: 'POST',
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      color,
      trace_id: traceId,
      source,
      extra: null // 预留字段
    })
  });
}
